#move.gcs
#Script to apply damage to the foe
SetVar *agressor 0

#Get the move name and alert mon is using a move
GetTableElement 0 of *temp
evaluate {*plyrname}+ " used " +{LASTRESULT}+ " !"
MessageBox move LASTRESULT

#Update the damage
compare *damage 0
if 5 then
	add *plyrstrenght *damage
	divide LASTRESULT 2
	SetVar *damage LASTRESULT
	turn *damage into int

#The move has MISS_RATE/100 chances to miss.
luck $MISS_RATE 100
compare LASTRESULT 1
if $EQUAL then
	MessageBox missed But It missed!
	SetVar *damage 0

#Accuracy check
luck *plyraccuracy $DEFAULT_ACCURACY
compare LASTRESULT 0
if $EQUAL then
	MessageBox missed But It missed!
	SetVar *damage 0

#The move has CRITICAL_RATE/100 chances to have double damage.
luck $CRITICAL_RATE 100
compare LASTRESULT 1
if $EQUAL then
	MessageBox critical Critical hit!
	multiply *damage 2
	SetVar *damage LASTRESULT

#execute effect script
GetTableElement 2 of *temp
evaluate ch_data( str({LASTRESULT}) , 'app/res/mons.ch' )
evaluate self.onclick(1, {LASTRESULT} )

#Then, substract the damage to the foe hp
substract *foeHp *damage
SetVar *foeHp LASTRESULT
turn *foeHp into int

#If foe has no hp left, end the game
compare *foeHp 0
if 2 then
	evaluate "HP:0/" +str({*initialFoeHp})
	CreateText 3 LASTRESULT
	MessageBox won foe fainted!
	execute app/scripts/nextfoe.gcs 1
	end

#Update the text of foe life stats
evaluate "HP:" +str({*foeHp})+ "/" +str({*initialFoeHp})
CreateText 3 LASTRESULT
evaluate "HP:" +str({*userHp})+ "/" +str({*initialUserHp})
CreateText 2 LASTRESULT

execute app/scripts/moveFoe.gcs 1

end

constants: app/consts.ch

[

TRASH
evaluate self.page.sheet.move({*lp}, -3, 0)
evaluate self.page.sheet.move({*lp}, -3, 0)
evaluate self.page.sheet.move({*lp}, -3, 0)
evaluate self.page.sheet.move({*lp}, 6, 0)
evaluate self.page.sheet.move({*lp}, 6, 0)
evaluate self.page.sheet.move({*lp}, -3, 0)
]